<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:oxm="http://www.springframework.org/schema/oxm" xmlns:int="http://www.springframework.org/schema/integration"
	xmlns:int-ws="http://www.springframework.org/schema/integration/ws"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/oxm http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd
		http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration.xsd
		http://www.springframework.org/schema/integration/ws http://www.springframework.org/schema/integration/ws/spring-integration-ws.xsd">


	<context:component-scan
		base-package="de.phigroup" />

	<!-- Initial service request
	<int:gateway id="systemEntry" default-request-channel="requestChannel"
		default-reply-channel="responseChannel"
		service-interface="xpadro.spring.integration.ws.gateway.TicketService" /> -->


	<int:channel id="requestChannel" />

	<!-- <int-ws:outbound-gateway id="marshallingGateway" -->
	<!-- request-channel="requestChannel" reply-channel="responseChannel" -->
	<!-- uri="http://localhost:8080/spring-ws-tickets/tickets" marshaller="marshaller" -->
	<!-- unmarshaller="marshaller" message-sender="messageSender" interceptor="myInterceptor" 
		> -->

	<!-- <int-ws:request-handler-advice-chain> -->
	<!-- <ref bean="retryAdvice" /> -->
	<!-- </int-ws:request-handler-advice-chain> -->
	<!-- </int-ws:outbound-gateway> -->

<!-- 	<int-ws:outbound-gateway id="marshallingGateway" -->
<!-- 		request-channel="requestChannel" reply-channel="responseChannel" -->
<!-- 		uri="https://82.150.238.5:5044/sst/CommonSecurityConfidential.http.ssl.v01-3-1-0" -->
<!-- 		marshaller="marshaller" unmarshaller="marshaller" message-sender="messageSender" -->
<!-- 		interceptor="myInterceptor"> -->

<!-- 		<int-ws:request-handler-advice-chain> -->
<!-- 			<ref bean="retryAdvice" /> -->
<!-- 		</int-ws:request-handler-advice-chain> -->
<!-- 	</int-ws:outbound-gateway> -->


<!-- 	<oxm:jaxb2-marshaller id="marshaller" -->
<!-- 		contextPath="xpadro.spring.integration.ws.types" /> -->

	<bean id="messageSender"
		class="org.springframework.ws.transport.http.HttpComponentsMessageSender">
		<property name="connectionTimeout" value="5000" />
		<property name="readTimeout" value="10000" />
	</bean>

<!-- 	<bean id="myInterceptor" class="xpadro.spring.integration.ws.interceptor.MyInterceptor" /> -->

	<!-- Service is running - Response received -->
	<int:channel id="responseChannel" />

<!-- 	<bean id="retryAdvice" -->
<!-- 		class="org.springframework.integration.handler.advice.RequestHandlerRetryAdvice"> -->
<!-- 		<property name="retryTemplate"> -->
<!-- 			<bean class="org.springframework.retry.support.RetryTemplate"> -->
<!-- 				<property name="backOffPolicy"> -->
<!-- 					<bean class="org.springframework.retry.backoff.FixedBackOffPolicy"> -->
<!-- 						<property name="backOffPeriod" value="5000" /> -->
<!-- 					</bean> -->
<!-- 				</property> -->
<!-- 				<property name="retryPolicy"> -->
<!-- 					<bean class="org.springframework.retry.policy.SimpleRetryPolicy"> -->
<!-- 						<property name="maxAttempts" value="1" /> -->
<!-- 					</bean> -->
<!-- 				</property> -->
<!-- 			</bean> -->
<!-- 		</property> -->
<!-- 	</bean> -->

	<!-- <bean id="trustStore"> -->
	<!-- <property name="targetObject" value="#{@systemProperties}" /> -->
	<!-- <property name="targetMethod" value="putAll" /> -->
	<!-- <property name="arguments"> -->
	<!-- <props> -->
	<!-- <prop key="javax.net.ssl.trustStore"> -->
	<!-- xpadro/spring/integration/ws/test/config/trust-store-lufthansa-ca-portecle.p12 -->
	<!-- </prop> -->
	<!-- <prop key="javax.net.ssl.keyStorePassword">@irc0n</prop> -->
	<!-- </props> -->
	<!-- </property> -->
	<!-- </bean> -->

	<!-- <bean id="keystore"> -->
	<!-- <property name="targetObject" value="#{@systemProperties}" /> -->
	<!-- <property name="targetMethod" value="putAll" /> -->
	<!-- <property name="arguments"> -->
	<!-- <props> -->
	<!-- <prop key="javax.net.ssl.keyStore"> -->
	<!-- xpadro/spring/integration/ws/test/config/trust-store-lufthansa-ca-portecle.p12 -->
	<!-- </prop> -->
	<!-- <prop key="javax.net.ssl.keyStorePassword">@irc0n</prop> -->
	<!-- </props> -->
	<!-- </property> -->
	<!-- </bean> -->

	<!-- <bean id="sslContextSupport" -->
	<!-- class="o.sf.integration.ip.tcp.connection.support.DefaultTcpSSLContextSupport"> -->
	<!-- <constructor-arg value="xpadro/spring/integration/ws/test/config/trust-store-lufthansa-ca-portecle.p12" 
		/> -->
	<!-- <constructor-arg value="xpadro/spring/integration/ws/test/config/trust-store-lufthansa-ca-portecle.p12" 
		/> -->
	<!-- <constructor-arg value="@irc0n" /> -->
	<!-- <constructor-arg value="@irc0n" /> -->
	<!-- </bean> -->

<!-- 	<bean id="trustStore" -->
<!-- 		class="org.springframework.ws.soap.security.support.KeyStoreFactoryBean"> -->
<!-- 		<property name="location" value="classpath:trust-store-lufthansa-ca.jks" /> -->
<!-- 		<property name="password" value="LufthansaCA" /> -->
<!-- 		<property name="type" value="JKS" /> -->
<!-- 	</bean> -->

<!-- 	<bean id="keyStoreHandler" -->
<!-- 		class="org.springframework.ws.soap.security.xwss.callback.KeyStoreCallbackHandler"> -->
<!-- 		<property name="trustStore" ref="trustStore" /> -->
<!-- 	</bean> -->

<!-- 	<bean id="wsSecurityInterceptor" -->
<!-- 		class="org.springframework.ws.soap.security.xwss.XwsSecurityInterceptor"> -->
<!-- 		<property name="policyConfiguration" value="classpath:securityPolicy.xml" /> -->
<!-- 		<property name="callbackHandlers"> -->
<!-- 			<list> -->
<!-- 				<ref bean="keyStoreHandler" /> -->
<!-- 				<ref bean="certificateHandler" /> -->
<!-- 				<ref bean="authenticationHandler" /> -->
<!-- 			</list> -->
<!-- 		</property> -->
<!-- 	</bean> -->


</beans>